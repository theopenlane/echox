env:
  APP_NAME: ${BUILDKITE_PIPELINE_SLUG}
  SONAR_HOST: "https://sonarcloud.io"
steps:
  - group: ":test_tube: Tests"
    key: "tests"
    steps:
      - label: ":golangci-lint: lint :lint-roller:"
        key: "lint"
        cancel_on_build_failing: true
        plugins:
          - docker#v5.12.0:
              image: "ghcr.io/theopenlane/build-image:latest"
              always-pull: true
              command: ["task", "go:lint"]
              environment:
                - "GOTOOLCHAIN=auto"
      - label: ":golang: go test"
        key: "go_test"
        cancel_on_build_failing: true
        plugins:
          - docker#v5.12.0:
              image: "ghcr.io/theopenlane/build-image:latest"
              always-pull: true
              command: ["task", "go:test:cover"]
              environment:
                - "GOTOOLCHAIN=auto"
        artifact_paths: ["coverage.out"]
      - label: ":github: upload reports"
        key: "scan-upload"
        if: build.branch == "main"
        depends_on: ["go_test"]
        plugins:
          - artifacts#v1.9.4:
              download: results.txt
          - artifacts#v1.9.4:
              download: coverage.out
              step: "go_test"
          - docker#v5.12.0:
              image: "sonarsource/sonar-scanner-cli:11"
              environment:
                - "SONAR_TOKEN"
                - "SONAR_HOST_URL=$SONAR_HOST"
